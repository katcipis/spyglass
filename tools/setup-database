#!/usr/bin/env python

import sys
import asyncio
import asyncpg
import datetime

from config.loaders import load_postgresql_config


async def main():
    uri, err = load_postgresql_config()
    if err is not None:
        print(err)
        sys.exit(1)

    conn = await asyncpg.connect(uri)
    # # Execute a statement to create a new table.
    # await conn.execute('''
        # CREATE TABLE users(
            # id serial PRIMARY KEY,
            # name text,
            # dob date
        # )
    # ''')

    # # Insert a record into the created table.
    # await conn.execute('''
        # INSERT INTO users(name, dob) VALUES($1, $2)
    # ''', 'Bob', datetime.date(1984, 3, 1))

    # # Select a row from the table.
    # row = await conn.fetchrow(
        # 'SELECT * FROM users WHERE name = $1', 'Bob')
    # *row* now contains
    # asyncpg.Record(id=1, name='Bob', dob=datetime.date(1984, 3, 1))

    # Close the connection.
    await conn.close()


if __name__ == "__main__":
    asyncio.run(main())
