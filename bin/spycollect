#!/usr/bin/env python

import sys
import asyncio
import logging

from config.loaders import load_kafka_config
from health.pubsub import KafkaSubscriber


async def main():
    kafka_cfg, err = load_kafka_config()
    #TODO: load postgresql config
    abort_on_err([err])

    subscriber = KafkaSubscriber(
        kafka_cfg.uri,
        kafka_cfg.ssl_cafile,
        kafka_cfg.ssl_cert,
        kafka_cfg.ssl_keyfile,
    )

    log = logging.getLogger("spycollect")

    try:
        log.debug(f"starting kafka subscriber uri: {kafka_cfg.uri}")
        await subscriber.start()
        async for url, status in subscriber:
            print("TODO:Storage", url, status)

    finally:
        await subscriber.stop()

def abort_on_err(errs):
    fail = False
    for err in errs:
        if err is None:
            continue
        fail = True
        print(err)

    if fail:
        print()
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
